(function(angular){

    'use strict';

    <% var hasInitEvent = !!extension && events.initEventHandler %>
    <% var hasShowEvent = !!extension && events.showEventHandler; %>

    angular.module('views')
        .controller('<%= controller %>', ['$scope', '$injector'<% if (hasInitEvent) { %>, 'onInit'<% } %>,function ($scope, $injector<% if (hasInitEvent) { %>, onInit<% } %>) {
            $scope.factory = $injector.get('<%= extension %>');
            <% if (hasShowEvent) { %>
            $scope.$on('$viewContentLoaded', function(e) {
                $scope.factory['<%= events.showEventHandler %>'](e.currentScope<% if (hasInitEvent) { %>, onInit<% } %>);
            });
            <% } %>

            $scope._$ds = new kendo.data.DataSource(<%- dataSource %>);

            $scope._$ds.bind('error', errorHandler);

            $scope.model = <%- options %>;

            $scope.$on('$destroy', function() {
                $scope._$ds.unbind('error', errorHandler);
            });

            function errorHandler(e) {
                var transport = e.sender.transport;
                var tableRef = transport.tableRef;
                var jsdo = transport.jsdo;
                var table = tableRef ? jsdo[tableRef] : jsdo;
                var errors = table.getErrors();
                var message = e.errorThrown.message;

                message += "<ul>";

                for (var i = 0; i < errors.length; i++) {
                    message += '<li>' + errors[i].error + '</li>';
                }

                message += "</ul>";

                $scope.$emit('notification', { type: 'error', message: message});
            }
        }]);
})(angular);
